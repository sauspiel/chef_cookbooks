global
  log /dev/log local0 info
  log /dev/log local1 notice
  maxconn 8000
  user <%= @node[:haproxy][:user] %>
  group <%= @node[:haproxy][:user] %>
  pidfile /var/run/haproxy/<%= @name %>.pid
  stats socket /var/run/haproxy/<%= @name %>.stats level admin

defaults
  log global
  balance leastconn
  option dontlognull
  option redispatch
  option forwardfor
  option httplog
  option http-server-close
  timeout http-keep-alive 8s
  mode http
  retries 3
  contimeout <%= @node[:haproxy][:connection_timeout] %>
  clitimeout <%= @node[:haproxy][:client_timeout] %>
  srvtimeout <%= @node[:haproxy][:server_timeout] %>
  errorfile 500 /etc/haproxy/500.http
  errorfile 502 /etc/haproxy/500.http
  errorfile 503 /etc/haproxy/500.http

  frontend <%= @name %> <%= @config[:listen_address] || "0.0.0.0" %>:<%=  @config[:listen_port] || @node[:haproxy][:listen_port] %>

    capture request header X-Forwarded-For len 16
    capture request header Host len 100
    capture request header X-Request-Id len 36

    <% if @config[:proxy_acls] %>
    <% @config[:proxy_acls].each do |acl_name, acl_config| -%>
    acl <%= acl_name %> <%= acl_config[:rule] %>
    use_backend <%= acl_config[:backend_name]%> <%= acl_config[:backend_conditions] %>
    <% end -%>
    <% end -%>

    default_backend <%= @config[:default_backend] %>
      
    <% @config[:backends].each do |name, conf| -%>
    backend <%= name %>
      <% if conf[:monitoring][:path] %>
      option httpchk HEAD <%= conf[:monitoring][:path] %> HTTP/1.1\r\nHost:\ <%= conf[:monitoring][:host] %>
      <% end -%>
      <% conf[:servers].each do |s_name, s_conf| %>
      server <%= s_name.gsub("-", "_") %> <%= s_conf[:ipaddress] %>:<%= s_conf[:port] || conf[:port] %> <% if conf[:monitoring] %>check inter 5000<% end -%> <% if s_conf[:backup] %>backup<% end -%>
      <% end -%>
    <% end -%>
    
  listen <%= @name %>_admin <%= @config[:listen_address] || "0.0.0.0" %>:<%= @node[:haproxy][:admin_port] %>
    mode http
    stats uri /
    
